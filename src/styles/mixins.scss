@import "variables";

@mixin display-l {
  line-height: var(--line-height-display, 1.13);
  letter-spacing: var(--letter-spacing-display-l, -0.03em);
  font-size: 60px;
  @media (max-width: $device-tablet-max) {
    font-size: 36px;
  }
}
@mixin display-m {
  line-height: var(--line-height-display, 1.13);
  letter-spacing: var(--letter-spacing-display-m, -0.03em);
  font-size: 48px;
  @media (max-width: $device-tablet-max) {
    font-size: 30px;
  }
}
@mixin display-s {
  line-height: var(--line-height-display, 1.13);
  letter-spacing: var(--letter-spacing-display-s, -0.03em);
  font-size: 36px;
  @media (max-width: $device-tablet-max) {
    font-size: 24px;
  }
}
@mixin body-l {
  letter-spacing: var(--letter-spacing-body-l, -0.03em);
  font-size: 30px;
  @media (max-width: $device-tablet-max) {
    font-size: 21px;
  }
}
@mixin body-m {
  letter-spacing: var(--letter-spacing-body-m, -0.03em);
  font-size: 24px;
  @media (max-width: $device-tablet-max) {
    font-size: 18px;
  }
}
@mixin body-s {
  letter-spacing: var(--letter-spacing-body-s, -0.03em);
  font-size: 18px;
  @media (max-width: $device-tablet-max) {
    font-size: 15px;
  }
}
@mixin body-xs {
  letter-spacing: var(--letter-spacing-body-xs, -0.03em);
  font-size: 12px;
  @media (max-width: $device-tablet-max) {
    font-size: 12px;
  }
}

@mixin gap {
  gap: 18px;
  @media (max-width: $device-tablet-max) {
    gap: 15px;
  }
}
@mixin radius-l {
  border-radius: $radius-l;
  @media (max-width: $device-tablet-max) {
    border-radius: $radius-m;
  }
}
@mixin radius-m {
  border-radius: $radius-m;
  @media (max-width: $device-tablet-max) {
    border-radius: $radius-s;
  }
}
@mixin radius-s {
  border-radius: $radius-s;
}

@mixin transition(
  $property: all,
  $duration: 0.3s,
  $function: ease-in-out,
  $delay: 0s
) {
  transition: $property $duration $function $delay;
}
@mixin translate-y($y) {
  transform: translateY($y);
}
@mixin rotate($deg) {
  transform: rotate($deg);
}
@mixin skew($x: 0, $y: 0) {
  transform: skew($x, $y);
}
@mixin scale($scale) {
  transform: scale($scale);
}
@mixin gradient {
  background: linear-gradient(to right, #000, #fff) 0 0;
  background-size: 100% 60px;
  &:hover {
    background-size: 200% 60px;
    background-position: 100% 0;
  }
}
@mixin grayscale($value) {
  filter: grayscale($value);
}
@mixin backdrop($color, $blur) {
  background: $color;
  @supports (backdrop-filter: none) {
    background: $color;
    backdrop-filter: blur($blur);
  }
}
@mixin block-columns($columns) {
  column-count: $columns;
  & > * {
    break-inside: avoid-column;
  }
}
@mixin text-lines($lines) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
}
@mixin text-nowrap {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
@mixin noselect {
  user-select: none;
}
@mixin scrollbar-y(
  $color: var(--content-flat-secondary, $color-bnw-500),
  $background: rgba(255, 255, 255, 0)
) {
  overflow-y: auto;
  overflow-x: hidden;
  scrollbar-color: $color $background;
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
  &::-webkit-scrollbar {
    width: 9px;
  }
  &::-webkit-scrollbar-track {
    background: $background;
  }
  &::-webkit-scrollbar-thumb {
    background: $color;
    border: 3px solid var(--background-flat-tertiary, $color-bnw-1000);
    border-radius: $radius-l;
  }
}
@mixin scrollbar-x(
  $color: var(--content-flat-secondary, $color-bnw-500),
  $background: rgba(255, 255, 255, 0)
) {
  overflow-y: hidden;
  overflow-x: auto;
  scrollbar-color: $color $background;
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
  &::-webkit-scrollbar {
    height: 24px;
  }
  &::-webkit-scrollbar-track {
    background: $background;
  }
  &::-webkit-scrollbar-thumb {
    background: $color;
    border: 9px solid var(--background-flat-tertiary, $color-bnw-1000);
    border-radius: $radius-l;
  }
}
@mixin placeholder(
  $opacity: 1,
  $opacity-focus: 1,
  $letter-spacing: inherit,
  $font-size: inherit,
  $text-transform: none,
  $color: var(--content-action-secondary-default, $color-bnw-500),
  $color-focus: var(--content-action-secondary-default, $color-bnw-500)
) {
  &[placeholder] {
    &::placeholder {
      opacity: $opacity;
      letter-spacing: $letter-spacing;
      font-size: $font-size;
      text-transform: $text-transform;
      color: $color;
      @include transition;
    }
    &:focus {
      &::placeholder {
        opacity: $opacity-focus;
        color: $color-focus;
      }
    }
  }
}

@mixin fade($duration) {
  body {
    .fade-#{$duration}-appear,
    .fade-#{$duration}-enter {
      opacity: 0;
      transition: none;
    }
    .fade-#{$duration}-appear-active,
    .fade-#{$duration}-enter-active {
      opacity: 1;
      transition: opacity #{$duration}ms ease-in-out !important;
    }
    .fade-#{$duration}-exit {
      opacity: 1;
      transition: none;
    }
    .fade-#{$duration}-exit-active {
      opacity: 0;
      transition: opacity #{$duration}ms ease-in-out !important;
    }
  }
}

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@mixin styles($values, $mode) {
  @each $key, $map in $values {
    @each $prop, $value in $map {
      @if $prop == $mode {
        --#{$key}: #{$value};
      }
    }
  }
}
